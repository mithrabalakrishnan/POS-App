// Generated by view binder compiler. Do not edit!
package com.example.pos_android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.pos_android.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout addFood;

  @NonNull
  public final ConstraintLayout btnAddVoucher;

  @NonNull
  public final ConstraintLayout btnAddWaiter;

  @NonNull
  public final MaterialButton btnLogout;

  @NonNull
  public final ConstraintLayout btnReport;

  @NonNull
  public final ImageView ivProduct;

  @NonNull
  public final ImageView ivWaiter;

  @NonNull
  public final ConstraintLayout layoutBest;

  @NonNull
  public final ConstraintLayout layoutKitchenUser;

  @NonNull
  public final ConstraintLayout layoutWaiter;

  @NonNull
  public final LinearLayout linearLayout12;

  @NonNull
  public final TextView textView14;

  @NonNull
  public final TextView textView19;

  @NonNull
  public final TextView textView29;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final TextView txtItemname;

  @NonNull
  public final TextView txtPro;

  @NonNull
  public final TextView txtWaiterName;

  private ActivityAdminHomeBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout addFood, @NonNull ConstraintLayout btnAddVoucher,
      @NonNull ConstraintLayout btnAddWaiter, @NonNull MaterialButton btnLogout,
      @NonNull ConstraintLayout btnReport, @NonNull ImageView ivProduct,
      @NonNull ImageView ivWaiter, @NonNull ConstraintLayout layoutBest,
      @NonNull ConstraintLayout layoutKitchenUser, @NonNull ConstraintLayout layoutWaiter,
      @NonNull LinearLayout linearLayout12, @NonNull TextView textView14,
      @NonNull TextView textView19, @NonNull TextView textView29, @NonNull TextView textView9,
      @NonNull TextView txtItemname, @NonNull TextView txtPro, @NonNull TextView txtWaiterName) {
    this.rootView = rootView;
    this.addFood = addFood;
    this.btnAddVoucher = btnAddVoucher;
    this.btnAddWaiter = btnAddWaiter;
    this.btnLogout = btnLogout;
    this.btnReport = btnReport;
    this.ivProduct = ivProduct;
    this.ivWaiter = ivWaiter;
    this.layoutBest = layoutBest;
    this.layoutKitchenUser = layoutKitchenUser;
    this.layoutWaiter = layoutWaiter;
    this.linearLayout12 = linearLayout12;
    this.textView14 = textView14;
    this.textView19 = textView19;
    this.textView29 = textView29;
    this.textView9 = textView9;
    this.txtItemname = txtItemname;
    this.txtPro = txtPro;
    this.txtWaiterName = txtWaiterName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_food;
      ConstraintLayout addFood = ViewBindings.findChildViewById(rootView, id);
      if (addFood == null) {
        break missingId;
      }

      id = R.id.btn_add_voucher;
      ConstraintLayout btnAddVoucher = ViewBindings.findChildViewById(rootView, id);
      if (btnAddVoucher == null) {
        break missingId;
      }

      id = R.id.btn_add_waiter;
      ConstraintLayout btnAddWaiter = ViewBindings.findChildViewById(rootView, id);
      if (btnAddWaiter == null) {
        break missingId;
      }

      id = R.id.btn_logout;
      MaterialButton btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.btn_report;
      ConstraintLayout btnReport = ViewBindings.findChildViewById(rootView, id);
      if (btnReport == null) {
        break missingId;
      }

      id = R.id.ivProduct;
      ImageView ivProduct = ViewBindings.findChildViewById(rootView, id);
      if (ivProduct == null) {
        break missingId;
      }

      id = R.id.iv_waiter;
      ImageView ivWaiter = ViewBindings.findChildViewById(rootView, id);
      if (ivWaiter == null) {
        break missingId;
      }

      id = R.id.layout_best;
      ConstraintLayout layoutBest = ViewBindings.findChildViewById(rootView, id);
      if (layoutBest == null) {
        break missingId;
      }

      id = R.id.layout_kitchen_user;
      ConstraintLayout layoutKitchenUser = ViewBindings.findChildViewById(rootView, id);
      if (layoutKitchenUser == null) {
        break missingId;
      }

      id = R.id.layout_waiter;
      ConstraintLayout layoutWaiter = ViewBindings.findChildViewById(rootView, id);
      if (layoutWaiter == null) {
        break missingId;
      }

      id = R.id.linearLayout12;
      LinearLayout linearLayout12 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout12 == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      id = R.id.textView19;
      TextView textView19 = ViewBindings.findChildViewById(rootView, id);
      if (textView19 == null) {
        break missingId;
      }

      id = R.id.textView29;
      TextView textView29 = ViewBindings.findChildViewById(rootView, id);
      if (textView29 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.txt_itemname;
      TextView txtItemname = ViewBindings.findChildViewById(rootView, id);
      if (txtItemname == null) {
        break missingId;
      }

      id = R.id.txt_pro;
      TextView txtPro = ViewBindings.findChildViewById(rootView, id);
      if (txtPro == null) {
        break missingId;
      }

      id = R.id.txt_waiter_name;
      TextView txtWaiterName = ViewBindings.findChildViewById(rootView, id);
      if (txtWaiterName == null) {
        break missingId;
      }

      return new ActivityAdminHomeBinding((LinearLayout) rootView, addFood, btnAddVoucher,
          btnAddWaiter, btnLogout, btnReport, ivProduct, ivWaiter, layoutBest, layoutKitchenUser,
          layoutWaiter, linearLayout12, textView14, textView19, textView29, textView9, txtItemname,
          txtPro, txtWaiterName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
