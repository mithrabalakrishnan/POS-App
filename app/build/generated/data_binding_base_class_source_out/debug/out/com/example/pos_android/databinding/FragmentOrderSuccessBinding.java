// Generated by view binder compiler. Do not edit!
package com.example.pos_android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.example.pos_android.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOrderSuccessBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnSummary;

  @NonNull
  public final LottieAnimationView lottie;

  @NonNull
  public final LinearLayout orderSuccess;

  @NonNull
  public final TextView tvSuccess;

  private FragmentOrderSuccessBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnSummary, @NonNull LottieAnimationView lottie,
      @NonNull LinearLayout orderSuccess, @NonNull TextView tvSuccess) {
    this.rootView = rootView;
    this.btnSummary = btnSummary;
    this.lottie = lottie;
    this.orderSuccess = orderSuccess;
    this.tvSuccess = tvSuccess;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOrderSuccessBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOrderSuccessBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_order_success, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOrderSuccessBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_summary;
      MaterialButton btnSummary = ViewBindings.findChildViewById(rootView, id);
      if (btnSummary == null) {
        break missingId;
      }

      id = R.id.lottie;
      LottieAnimationView lottie = ViewBindings.findChildViewById(rootView, id);
      if (lottie == null) {
        break missingId;
      }

      id = R.id.order_success;
      LinearLayout orderSuccess = ViewBindings.findChildViewById(rootView, id);
      if (orderSuccess == null) {
        break missingId;
      }

      id = R.id.tv_success;
      TextView tvSuccess = ViewBindings.findChildViewById(rootView, id);
      if (tvSuccess == null) {
        break missingId;
      }

      return new FragmentOrderSuccessBinding((ConstraintLayout) rootView, btnSummary, lottie,
          orderSuccess, tvSuccess);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
