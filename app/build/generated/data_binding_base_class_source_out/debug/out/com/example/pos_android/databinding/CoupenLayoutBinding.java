// Generated by view binder compiler. Do not edit!
package com.example.pos_android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.pos_android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CoupenLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FrameLayout frameCoupon;

  @NonNull
  public final ImageView imageLogo;

  @NonNull
  public final ImageView imageSubtract;

  @NonNull
  public final View lineVectorOne;

  @NonNull
  public final LinearLayout linearColumnprice;

  @NonNull
  public final LinearLayout linearRowcar;

  @NonNull
  public final TextView txtMonth;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final TextView txtPrice;

  private CoupenLayoutBinding(@NonNull LinearLayout rootView, @NonNull FrameLayout frameCoupon,
      @NonNull ImageView imageLogo, @NonNull ImageView imageSubtract, @NonNull View lineVectorOne,
      @NonNull LinearLayout linearColumnprice, @NonNull LinearLayout linearRowcar,
      @NonNull TextView txtMonth, @NonNull TextView txtName, @NonNull TextView txtPrice) {
    this.rootView = rootView;
    this.frameCoupon = frameCoupon;
    this.imageLogo = imageLogo;
    this.imageSubtract = imageSubtract;
    this.lineVectorOne = lineVectorOne;
    this.linearColumnprice = linearColumnprice;
    this.linearRowcar = linearRowcar;
    this.txtMonth = txtMonth;
    this.txtName = txtName;
    this.txtPrice = txtPrice;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CoupenLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CoupenLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.coupen_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CoupenLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.frameCoupon;
      FrameLayout frameCoupon = ViewBindings.findChildViewById(rootView, id);
      if (frameCoupon == null) {
        break missingId;
      }

      id = R.id.imageLogo;
      ImageView imageLogo = ViewBindings.findChildViewById(rootView, id);
      if (imageLogo == null) {
        break missingId;
      }

      id = R.id.imageSubtract;
      ImageView imageSubtract = ViewBindings.findChildViewById(rootView, id);
      if (imageSubtract == null) {
        break missingId;
      }

      id = R.id.lineVectorOne;
      View lineVectorOne = ViewBindings.findChildViewById(rootView, id);
      if (lineVectorOne == null) {
        break missingId;
      }

      id = R.id.linearColumnprice;
      LinearLayout linearColumnprice = ViewBindings.findChildViewById(rootView, id);
      if (linearColumnprice == null) {
        break missingId;
      }

      id = R.id.linearRowcar;
      LinearLayout linearRowcar = ViewBindings.findChildViewById(rootView, id);
      if (linearRowcar == null) {
        break missingId;
      }

      id = R.id.txtMonth;
      TextView txtMonth = ViewBindings.findChildViewById(rootView, id);
      if (txtMonth == null) {
        break missingId;
      }

      id = R.id.txtName;
      TextView txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txtPrice;
      TextView txtPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtPrice == null) {
        break missingId;
      }

      return new CoupenLayoutBinding((LinearLayout) rootView, frameCoupon, imageLogo, imageSubtract,
          lineVectorOne, linearColumnprice, linearRowcar, txtMonth, txtName, txtPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
