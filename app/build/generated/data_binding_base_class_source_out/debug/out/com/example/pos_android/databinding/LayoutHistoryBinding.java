// Generated by view binder compiler. Do not edit!
package com.example.pos_android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.pos_android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutHistoryBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout layoutFoodDetails;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvStatus;

  @NonNull
  public final TextView tvTableId;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final TextView tvTotal;

  private LayoutHistoryBinding(@NonNull CardView rootView, @NonNull LinearLayout layoutFoodDetails,
      @NonNull TextView tvDate, @NonNull TextView tvStatus, @NonNull TextView tvTableId,
      @NonNull TextView tvTime, @NonNull TextView tvTotal) {
    this.rootView = rootView;
    this.layoutFoodDetails = layoutFoodDetails;
    this.tvDate = tvDate;
    this.tvStatus = tvStatus;
    this.tvTableId = tvTableId;
    this.tvTime = tvTime;
    this.tvTotal = tvTotal;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layout_food_details;
      LinearLayout layoutFoodDetails = ViewBindings.findChildViewById(rootView, id);
      if (layoutFoodDetails == null) {
        break missingId;
      }

      id = R.id.tv_date;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tv_status;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      id = R.id.tv_table_Id;
      TextView tvTableId = ViewBindings.findChildViewById(rootView, id);
      if (tvTableId == null) {
        break missingId;
      }

      id = R.id.tv_time;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.tv_total;
      TextView tvTotal = ViewBindings.findChildViewById(rootView, id);
      if (tvTotal == null) {
        break missingId;
      }

      return new LayoutHistoryBinding((CardView) rootView, layoutFoodDetails, tvDate, tvStatus,
          tvTableId, tvTime, tvTotal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
